package com.mycompany.calculadora;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class Calculadora extends JFrame implements ActionListener {

    JButton btnZero, btnUm, btnDois, btnTres, btnQuatro, btnCinco,
            btnSeis, btnSete, btnOito, btnNove;
    
    JButton btnSoma, btnSubtracao, btnMultiplicacao, btnDivisao, btnIgual, btnLimparC, btnPonto;

    JTextField campoResultado;

    // --- VARIÁVEIS SIMPLIFICADAS PARA O CÁLCULO ---
    private double primeiroNumero;
    private String operador;
    private boolean novoNumero = true; // Indica se o próximo dígito deve iniciar um novo número
    // ------------------------------------------------

    public Calculadora() {

        JPanel panel = new JPanel();
        panel.setLayout(new GridBagLayout());
        this.setTitle("Calculadora");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setSize(250, 400); 
        this.setLocationRelativeTo(null);

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(4, 4, 4, 4); 

        // --- LINHA DE ENCHIMENTO SUPERIOR ---
        JPanel topFiller = new JPanel();
        gbc.gridx = 0; gbc.gridy = 0; gbc.gridwidth = 4; gbc.fill = GridBagConstraints.BOTH; gbc.weighty = 0.2; panel.add(topFiller, gbc);

        // Campo de resultado
        campoResultado = new JTextField("0", 20); // Inicializa com "0"
        campoResultado.setHorizontalAlignment(JTextField.RIGHT); // Alinha texto à direita
        campoResultado.setEditable(false); // Impede que o usuário digite no campo
        
        gbc.gridx = 0; gbc.gridy = 1; gbc.gridwidth = 4; gbc.fill = GridBagConstraints.BOTH; gbc.weightx = 1.0; gbc.weighty = 0.3; gbc.insets = new Insets(6, 6, 6, 6); panel.add(campoResultado, gbc);
        
        // --- COMPONENTE ESPAÇADOR ---
        JPanel spacer = new JPanel();
        spacer.setPreferredSize(new Dimension(1, 5)); 
        gbc.gridx = 0; gbc.gridy = 2; gbc.gridwidth = 4; gbc.fill = GridBagConstraints.NONE; gbc.weightx = 0; gbc.weighty = 0; gbc.insets = new Insets(0,0,0,0); panel.add(spacer, gbc);

        // --- Botões da Calculadora (Layout conforme definido anteriormente) ---
        gbc.gridwidth = 1; 
        gbc.fill = GridBagConstraints.BOTH; 
        gbc.weightx = 1.0; 
        gbc.weighty = 1.0; 
        gbc.insets = new Insets(4, 4, 4, 4); 

        // Linha 1 de Botões: C, Divisão, Multiplicação
        btnLimparC = new JButton("C"); gbc.gridx = 0; gbc.gridy = 3; gbc.gridwidth = 2; panel.add(btnLimparC, gbc);
        btnDivisao = new JButton("/"); gbc.gridx = 2; gbc.gridy = 3; gbc.gridwidth = 1; panel.add(btnDivisao, gbc);
        btnMultiplicacao = new JButton("*"); gbc.gridx = 3; gbc.gridy = 3; panel.add(btnMultiplicacao, gbc);

        // Linha 2 de Botões: 7 8 9 e Subtração
        btnSete = new JButton("7"); gbc.gridx = 0; gbc.gridy = 4; panel.add(btnSete, gbc);
        btnOito = new JButton("8"); gbc.gridx = 1; gbc.gridy = 4; panel.add(btnOito, gbc);
        btnNove = new JButton("9"); gbc.gridx = 2; gbc.gridy = 4; panel.add(btnNove, gbc);
        btnSubtracao = new JButton("-"); gbc.gridx = 3; gbc.gridy = 4; panel.add(btnSubtracao, gbc);

        // Linha 3 de Botões: 4 5 6 e Adição
        btnQuatro = new JButton("4"); gbc.gridx = 0; gbc.gridy = 5; panel.add(btnQuatro, gbc);
        btnCinco = new JButton("5"); gbc.gridx = 1; gbc.gridy = 5; panel.add(btnCinco, gbc);
        btnSeis = new JButton("6"); gbc.gridx = 2; gbc.gridy = 5; panel.add(btnSeis, gbc);
        btnSoma = new JButton("+"); gbc.gridx = 3; gbc.gridy = 5; panel.add(btnSoma, gbc);

        // Linha 4 de Botões: 1 2 3 e Igual
        btnUm = new JButton("1"); gbc.gridx = 0; gbc.gridy = 6; panel.add(btnUm, gbc);
        btnDois = new JButton("2"); gbc.gridx = 1; gbc.gridy = 6; panel.add(btnDois, gbc);
        btnTres = new JButton("3"); gbc.gridx = 2; gbc.gridy = 6; panel.add(btnTres, gbc);
        
        btnIgual = new JButton("="); gbc.gridx = 3; gbc.gridy = 6; gbc.gridheight = 2; panel.add(btnIgual, gbc);

        // Linha 5 de Botões: 0 e Ponto
        btnZero = new JButton("0"); gbc.gridx = 0; gbc.gridy = 7; gbc.gridwidth = 2; gbc.gridheight = 1; panel.add(btnZero, gbc);
        btnPonto = new JButton("."); gbc.gridx = 2; gbc.gridy = 7; gbc.gridwidth = 1; panel.add(btnPonto, gbc);

        // --- LINHA DE ENCHIMENTO INFERIOR ---
        JPanel bottomFiller = new JPanel();
        gbc.gridx = 0; gbc.gridy = 8; gbc.gridwidth = 4; gbc.fill = GridBagConstraints.BOTH; gbc.weighty = 0.8; panel.add(bottomFiller, gbc);

        this.add(panel);
        this.setVisible(true);

        // --- ADICIONANDO LISTENERS AQUI ---
        // Você pode agrupar os listeners para os números, já que a lógica é a mesma
        JButton[] numericButtons = {btnZero, btnUm, btnDois, btnTres, btnQuatro, 
                                    btnCinco, btnSeis, btnSete, btnOito, btnNove, btnPonto};
        for (JButton button : numericButtons) {
            button.addActionListener(this);
        }

        // Operadores e controle
        btnSoma.addActionListener(this);
        btnSubtracao.addActionListener(this);
        btnMultiplicacao.addActionListener(this);
        btnDivisao.addActionListener(this);
        btnLimparC.addActionListener(this);
        btnIgual.addActionListener(this);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String comando = e.getActionCommand(); // Pega o texto do botão clicado

        // Se for um número (0-9) ou ponto
        if (comando.matches("[0-9]")) {
            if (novoNumero) {
                campoResultado.setText(comando); // Começa um novo número
                novoNumero = false;
            } else {
                campoResultado.setText(campoResultado.getText() + comando); // Adiciona ao número existente
            }
        } else if (comando.equals(".")) {
            if (novoNumero) {
                campoResultado.setText("0.");
                novoNumero = false;
            } else if (!campoResultado.getText().contains(".")) {
                campoResultado.setText(campoResultado.getText() + ".");
            }
        }
        // Se for um operador (+, -, *, /)
        else if (comando.matches("[+\\-*/]")) {
            primeiroNumero = Double.parseDouble(campoResultado.getText()); // Guarda o número atual
            operador = comando; // Guarda o operador
            novoNumero = true; // Prepara para o próximo número
        }
        // Se for o botão de Igual (=)
        else if (comando.equals("=")) {
            if (!operador.isEmpty()) { // Só calcula se um operador foi selecionado
                double segundoNumero = Double.parseDouble(campoResultado.getText());
                double resultado = 0;

                switch (operador) {
                    case "+":
                        resultado = primeiroNumero + segundoNumero;
                        break;
                    case "-":
                        resultado = primeiroNumero - segundoNumero;
                        break;
                    case "*":
                        resultado = primeiroNumero * segundoNumero;
                        break;
                    case "/":
                        if (segundoNumero == 0) {
                            campoResultado.setText("Erro: Div por 0");
                            primeiroNumero = 0; // Reseta para evitar problemas
                            operador = "";
                            novoNumero = true;
                            return; // Sai sem finalizar o cálculo
                        }
                        resultado = primeiroNumero / segundoNumero;
                        break;
                }
                // Exibe o resultado. Usa String.format para remover .0 se for inteiro
                if (resultado == (long) resultado) { // Verifica se é um número inteiro
                    campoResultado.setText(String.format("%d", (long) resultado));
                } else {
                    campoResultado.setText(String.valueOf(resultado));
                }
                
                primeiroNumero = resultado; // O resultado se torna o primeiro número para encadeamento
                operador = ""; // Limpa o operador
                novoNumero = true; // Prepara para um novo cálculo
            }
        }
        // Se for o botão Limpar (C)
        else if (comando.equals("C")) {
            campoResultado.setText("0"); // Limpa o display
            primeiroNumero = 0; // Zera o primeiro número
            operador = ""; // Limpa o operador
            novoNumero = true; // Prepara para um novo número
        }
    }

    public static void main(String[] args) {
        new Calculadora();
    }
}
